[{"/home/manisrinivasa/Documents/react/aaic-task/src/reportWebVitals.js":"1","/home/manisrinivasa/Documents/react/aaic-task/src/App.js":"2","/home/manisrinivasa/Documents/react/aaic-task/src/index.js":"3","/home/manisrinivasa/Documents/react/aaic-task/src/Components/MenuList.js":"4","/home/manisrinivasa/Documents/react/aaic-task/src/Components/Content.js":"5"},{"size":362,"mtime":1606573592461,"results":"6","hashOfConfig":"7"},{"size":2332,"mtime":1606828060955,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1606573592457,"results":"9","hashOfConfig":"7"},{"size":2948,"mtime":1606827119738,"results":"10","hashOfConfig":"7"},{"size":11617,"mtime":1606840077689,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z6n0k8",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/manisrinivasa/Documents/react/aaic-task/src/reportWebVitals.js",[],"/home/manisrinivasa/Documents/react/aaic-task/src/App.js",[],"/home/manisrinivasa/Documents/react/aaic-task/src/index.js",[],"/home/manisrinivasa/Documents/react/aaic-task/src/Components/MenuList.js",[],"/home/manisrinivasa/Documents/react/aaic-task/src/Components/Content.js",["23","24"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { yellow } from '@material-ui/core/colors';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {\n  Button,\n  InputAdornment,\n  InputBase,\n  TextField,\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    '& > *': {\n      margin: theme.spacing(4),\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    width: '50%',\n    margin: 'auto',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n  },\n  modalContent: {\n    padding: theme.spacing(2, 4, 3),\n  },\n  yellow: {\n    color: theme.palette.getContrastText(yellow[500]),\n    backgroundColor: yellow[400],\n  },\n  ma4: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  ma2: {\n    margin: theme.spacing(2),\n  },\n  ml2: {\n    marginLeft: theme.spacing(2),\n  },\n  ml4: {\n    marginLeft: theme.spacing(4),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  fullWidth: {\n    width: theme.fullWidth,\n  },\n  buttonGroup: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n  },\n}));\n\nconst Content = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <h2>Q&A</h2>\n      <Paper color='white'>\n        <Tabs value={value} onChange={handleChange} indicatorColor='primary'>\n          <Tab\n            style={{ color: '#f57f17' }}\n            label='My Queries'\n            {...a11yProps(0)}\n          />\n          <Tab style={{ color: '#f57f17' }} label=\"Faq's\" {...a11yProps(1)} />\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          My Queries\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <div>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder='Search'\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n          </div>\n          <div className={classes.ma4}>\n            <div>\n              <span>Filters:</span>\n              <Button\n                variant='outlined'\n                className={classes.ml2}\n                endIcon={<ArrowDropDownIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Categories\n              </Button>\n              <Button\n                variant='outlined'\n                className={classes.ml2}\n                endIcon={<ArrowDropDownIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Sub Categories\n              </Button>\n              <Button\n                variant='outlined'\n                className={classes.ml2}\n                endIcon={<ArrowDropDownIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Sub2 Categories\n              </Button>\n            </div>\n            <div>\n              <span>Sort By:</span>\n              <Button\n                variant='outlined'\n                className={classes.ml2}\n                endIcon={<ArrowDropDownIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Time\n              </Button>\n            </div>\n          </div>\n          <div className={classes.ml4}>\n            <h3>What is the use of Linear Algebra?</h3>\n            <span>\n              <Button\n                onClick={handleOpen}\n                className={classes.ml2}\n                startIcon={<ReportOutlinedIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Report\n              </Button>\n            </span>\n          </div>\n          <div className={classes.ml4}>\n            <p>\n              It is editor is based on Prosemirror, fully extendable and\n              renderless. You can easily add custom nodes as Vue Components\n              easily add custom nodes as components easily add custom nodes as\n              Vue Components easily add custom nodes as Vue Components\n            </p>\n          </div>\n          <div className={classes.ml4}>\n            <h3>What is the use of Linear Algebra?</h3>\n            <span>\n              <Button\n                onClick={handleOpen}\n                className={classes.ml2}\n                startIcon={<ReportOutlinedIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Report\n              </Button>\n            </span>\n          </div>\n          <div className={classes.ml4}>\n            <p>\n              It is editor is based on Prosemirror, fully extendable and\n              renderless. You can easily add custom nodes as Vue Components\n              easily add custom nodes as components easily add custom nodes as\n              Vue Components easily add custom nodes as Vue Components\n            </p>\n          </div>\n          <div className={classes.ml4}>\n            <h3>What is the use of Linear Algebra?</h3>\n            <span>\n              <Button\n                onClick={handleOpen}\n                className={classes.ml2}\n                startIcon={<ReportOutlinedIcon />}\n                style={{\n                  borderRadius: '25px',\n                }}\n              >\n                Report\n              </Button>\n            </span>\n          </div>\n          <div className={classes.ml4}>\n            <p>\n              It is editor is based on Prosemirror, fully extendable and\n              renderless. You can easily add custom nodes as Vue Components\n              easily add custom nodes as components easily add custom nodes as\n              Vue Components easily add custom nodes as Vue Components\n            </p>\n          </div>\n        </TabPanel>\n      </Paper>\n      <Modal\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper} style={{ borderRadius: '20px' }}>\n            <div\n              style={{\n                background: '#f9a825',\n                color: 'white',\n                width: '100%',\n                borderTopLeftRadius: '20px',\n                borderTopRightRadius: '20px',\n                height: '60px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Button\n                className={classes.ml2}\n                startIcon={<ReportOutlinedIcon />}\n                style={{\n                  color: 'white',\n                }}\n              >\n                Report\n              </Button>\n              <Button\n                onClick={handleClose}\n                style={{\n                  color: 'white',\n                }}\n              >\n                <CloseIcon />\n              </Button>\n            </div>\n            <div className={classes.modalContent}>\n              <h3 id='transition-modal-title'>\n                What is the use of Linear Algebra?\n              </h3>\n              <p id='transition-modal-description'>\n                It is editor is based on Prosemirror, fully extendable and\n                renderless. You can easily add custom nodes as Vue Components\n                easily add custom nodes as components easily add custom nodes as\n                Vue Components easily add custom nodes as Vue Components\n              </p>\n              <h3 id='transition-modal-title'>What's your changes</h3>\n              <textarea style={{ width: '100%' }} rows='10'></textarea>\n              <div className={classes.buttonGroup}>\n                <Button\n                  variant='outlined'\n                  disabled\n                  color='secondary'\n                  className={classes.ma2}\n                  style={{\n                    borderRadius: '25px',\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant='contained'\n                  style={{\n                    color: 'white',\n                    background: '#f9a825',\n                    borderRadius: '25px',\n                  }}\n                  className={classes.ma2}\n                >\n                  Send\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Content;\n",{"ruleId":"25","severity":1,"message":"26","line":13,"column":3,"nodeType":"27","messageId":"28","endLine":13,"endColumn":17},{"ruleId":"25","severity":1,"message":"29","line":15,"column":3,"nodeType":"27","messageId":"28","endLine":15,"endColumn":12},"no-unused-vars","'InputAdornment' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used."]